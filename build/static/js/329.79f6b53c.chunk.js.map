{"version":3,"file":"static/js/329.79f6b53c.chunk.js","mappings":"uMACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,4BAA4B,KAAO,sBAAsB,UAAY,4B,SCa3R,EAXkB,SAACA,GACf,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAEI,gBAAKC,UAAWC,EAAAA,OAAe,UAC3B,SAAC,KAAO,CAACC,GAAIJ,EAAME,UAAc,SAAAG,GAAO,OAAIA,EAAQC,SAAWH,EAAAA,WAAqBA,EAAAA,MAAc,EAAE,SAAEJ,EAAMQ,QAIxH,ECJA,EANgB,SAACR,GACb,OACI,gBAAKG,UAAWC,EAAAA,QAAgB,SAAEJ,EAAMS,SAEhD,E,6BC2BMC,GAAeC,EAAAA,EAAAA,IAAiB,KAchCC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAbL,SAACb,GACpB,OACI,kBAAMG,UAAWC,EAAAA,KAAcW,SAAUf,EAAMgB,aAAa,WACxD,gBAAKb,UAAWC,EAAAA,MAAc,UAC1B,SAACa,EAAA,EAAK,CAACd,UAAWC,EAAAA,UAClBc,YAAY,kBACZC,UAAWC,EAAAA,EAAUC,SAAW,CAACC,EAAAA,GAASZ,GAC1CF,KAAK,sBAET,gBAAKL,UAAWC,EAAAA,OAAe,UAAC,4BAAS,qBAGrD,IAEA,EAvCc,SAACJ,GACX,IAAIuB,EAAQvB,EAAMwB,YAKdC,EAAkBF,EAAMG,QACvBC,KAAI,SAAAC,GAAC,OAAK,SAAC,EAAU,CAACpB,KAAMoB,EAAEpB,KAAiBN,GAAI0B,EAAE1B,IAAZ0B,EAAE1B,GAAgB,IAE5D2B,EAAkBN,EAAMO,SACvBH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAO,CAACtB,QAASsB,EAAEtB,SAAcsB,EAAE7B,GAAK,IAEvD,OACI,iBAAKC,UAAWC,EAAAA,QAAgB,WAC5B,gBAAKD,UAAWC,EAAAA,aAAqB,SAChCqB,KAEL,iBAAMtB,UAAWC,EAAAA,SAAiB,UAC7ByB,GACD,SAACjB,EAAmB,CAACG,SAjBb,SAACiB,GACjBhC,EAAMiC,YAAYD,EAAOE,eAC7B,SAmBJ,E,UCVA,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACb,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IACyB,SAACa,GACtB,MAAO,CACHJ,YAAY,SAACC,GACTG,GAASC,EAAAA,EAAAA,GAAyBJ,GAEtC,EAER,IAIIK,EAAAA,EAFJ,CAGEC,E","sources":["webpack://my-app/./src/componets/Dialogs/Dialogs.module.css?887c","componets/Dialogs/DialogItem/DialogItem.jsx","componets/Dialogs/Message/Message.jsx","componets/Dialogs/Dialogs.jsx","componets/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ZViL2\",\"dialogsItems\":\"Dialogs_dialogsItems__OHy07\",\"dialog\":\"Dialogs_dialog__4WE9W\",\"messages\":\"Dialogs_messages__CoOqX\",\"message\":\"Dialogs_message__xTCKr\",\"activeLink\":\"Dialogs_activeLink__sd+yg\",\"send\":\"Dialogs_send__ehEuV\",\"inputArea\":\"Dialogs_inputArea__drLOz\"};","import { NavLink } from 'react-router-dom';\r\nimport classes from './../Dialogs.module.css'\r\n\r\nconst DialogItem =(props)=>{\r\n    let path = \"/dialogs/\" + props.id;\r\n    return(\r\n\r\n        <div className={classes.dialog}>\r\n            <NavLink to={path} className = { navData => navData.isActive ? classes.activeLink : classes.dialog }>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default DialogItem;","import classes from './../Dialogs.module.css'\r\n\r\nconst Message = (props)=>{\r\n    return(\r\n        <div className={classes.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport classes from './Dialogs.module.css'\r\nimport Message from './Message/Message';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\n\r\nconst Dialogs=(props)=>{\r\n    let state = props.dialogsPage;\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText);\r\n    }\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(d =>  <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n\r\n    let messagesElemets = state.messages\r\n        .map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div  className={classes.messages}>\r\n                {messagesElemets}\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst maxLength100 = maxLengthCreator(100)\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form className={classes.send} onSubmit={props.handleSubmit}>\r\n            <div className={classes.input}>\r\n                <Field className={classes.inputArea} \r\n                placeholder=\"write something\"  \r\n                component={Textarea} validate ={[required,maxLength100]}\r\n                name=\"newMessageText\"/>\r\n            </div>\r\n            <div className={classes.button}><button >Send Message</button></div>\r\n        </form>\r\n    );\r\n}\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport {sendMessageActionCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        sendMessage:(newMessageText) => {\r\n            dispatch(sendMessageActionCreator(newMessageText)); \r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","path","id","className","classes","to","navData","isActive","name","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElemets","messages","m","values","sendMessage","newMessageText","compose","connect","dispatch","sendMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}